;mbr程序
;
;mbr程序的加载：
;   bios程序完成自身工作后将根据配置的启动介质顺序去找可启动块
;   （以0x55aa结尾的512个字节），硬盘上的这块区域对应为0面0道1扇区
;   （一个扇区512个字节），通常称做mbr，bios找到后将这512字节加载到
;   内存0x0:0x7c00处，然后执行指令：
;   jmp 0x0:0x7c00
;   至此，CPU控制权转移到了mbr程序里
;   注：bios工作在实模式下
; 
;mbr程序所做的事：
;   一句话说，就是加载内核程序并将控制权转交给内核程序，具体事宜如下：
;   1. 从实模式进入保护模式
;       1.1 为进入保护模式做准备
;           1.1.1 创建GDT并加载到GDTR中
;               1.1.1.1 0#号空描述符
;               1.1.1.2 内核代码段
;               1.1.1.3 内核栈段
;               1.1.1.4 内核数据段
;           1.1.2 打开A20地址线
;           1.1.3 关闭中断
;       1.2 设置PE位，进入保护模式
;       1.3 清流水线并串行化处理器
;   2. 加载内核程序并将CPU控制权转换给内核
;       1.1 加载内核程序到内存
;           1.1 内核程序位于硬盘指定扇区（宏core_start_sector中定义）
;           1.2 内核程序头部中包含了内核程序的字节数、执行入口、段的起始地址及长度
;           1.3 mbr读取指定扇区（即内核程序头部）到预置内存地址
;           1.4 mbr根据内核头部信息读取剩余的内核程序
;       1.2 mbr根据内核头部的段信息为内核段在GDT中添加段描述符
;       1.3 mbr根据内核头部的执行入口信息转入内核执行

;宏定义
kernel_start_sector equ 50              ;内核在硬盘中的起始逻辑扇区号
kernel_base_address equ 0x00040000      ;内核要加载到的内存起始地址

;    _______ __ 0xffffffff (4GB)
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |
;   |_______|__ kernel 0x00040000
;   |       |
;   |       |
;   |       |
;   |       |
;   |       |-- 显存段描述符(base 0x000b8000, len 0x7fff)
;   |       |-- 栈段描述符(base 0x0000:7c00, len 0xffffe 4KB)
;   |       |-- mbr代码段描述符(0x0000:0x7c00, len 0x1ff)
;   |       |-- 0-4GB内存数据段描述符
;   |_______|-- 空描述符 _______ GDT 0x0000:0x7e00 
;   |       |\
;   |       | |
;   |       | |
;   |       | |-- 512 bytes (512 = 0x1ff + 1 = 0x200)
;   |       | |
;   |       | |
;   |_______|/__ mbr 0x0000:0x7c00
;   |       |\
;   |       | |
;   |       | |
;   |       | |
;   |       | |
;   |       | |-- stack
;   |       | |
;   |       | |
;   |       | |
;   |       | |
;   |_______|/__ 0x0


;当前在实模式下
;mbr

;进入了保护模式
flush:

;-----------------------------------------------------------------
gdt_ptr dw  0
        dd  

